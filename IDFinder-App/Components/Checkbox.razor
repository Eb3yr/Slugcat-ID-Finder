<li @attributes="AdditionalAttributes">
	<input type="checkbox" @bind="Target" @bind:after="InvokeChanged"/>
	<pre>@WeightLabel</pre>
	<input type="number" @bind=Weight @bind:after="InvokeChanged" size="3px" style="font-size: @(0.6f * FontSize)px;" />
</li>

@code {
	// Wrapper for a checkbox + weight combo
	[Parameter]
	public bool Target { get; set; } = false;
	[Parameter]
	public float Weight { get; set; } = 0f;
	[Parameter]
	public string WeightLabel { get; set; } = Consts.DefWeightLabel;
	[Parameter]
	public float FontSize { get; set; } = Consts.DefFontSize;
	[Parameter]
	public EventCallback<(bool target, float weight)> OnChanged { get; set; }
	[Parameter(CaptureUnmatchedValues = true)]
	public IDictionary<string, object>? AdditionalAttributes { get; set; }

	private void InvokeChanged() => OnChanged.InvokeAsync((Target, Weight));
}
